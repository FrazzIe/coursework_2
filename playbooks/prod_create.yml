- name: Create Production VM # Name
  hosts: localhost
  user: frazzle
  connection: local # Script to be executed locally
  vars: # Variables
    resourceGroup: cw2-pipeline
    vmName: cw2prod
  tasks: # Tasks
    - name: Download Azure Resource Management
      get_url:
        url: https://raw.githubusercontent.com/ansible/ansible/f7328693f247b60597c4c8c831742c68e153edf5/lib/ansible/plugins/inventory/azure_rm.py
        dest: "{{ ansible_env.HOME }}/.azure/azure_rm.py"
        mode: '0775'
      become: yes
    - name: Create public IP address
      azure_rm_publicipaddress:
        resource_group: "{{ resourceGroup }}"
        allocation_method: Static
        name: "{{ vmName }}-ip"
      register: output_ip_address
    - name: Creates ssh key directory
      file:
        path: "{{ ansible_env.HOME }}/.ssh/"
        state: directory
    - name: Generate SSH Key
      openssh_keypair:
        path: "{{ ansible_env.HOME }}/.ssh/id_rsa"
      register: deployKey
      when: output_ip_address.changed == true
    - name: Create virtual network
      azure_rm_virtualnetwork:
        resource_group: "{{ resourceGroup }}"
        name: "{{ vmName }}-vnet"
        address_prefixes: "10.0.0.0/16"
      when: output_ip_address.changed == true
    - name: Add subnet
      azure_rm_subnet:
        resource_group: "{{ resourceGroup }}"
        name: "{{ vmName }}-subnet"
        address_prefix: "10.0.1.0/24"
        virtual_network: "{{ vmName }}-vnet"
      when: output_ip_address.changed == true
    - name: Create Network Security Group that allows SSH
      azure_rm_securitygroup:
        resource_group: "{{ resourceGroup }}"
        name: "{{ vmName }}-nsg"
        rules:
          - name: SSH
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 300
            direction: Inbound
          - name: HTTPS
            protocol: Tcp
            destination_port_range: 443
            access: Allow
            priority: 320
            direction: Inbound
          - name: HTTP
            protocol: Tcp
            destination_port_range: 80
            access: Allow
            priority: 340
            direction: Inbound
          - name: Kubernetes
            protocol: Tcp
            destination_port_range: 8080
            access: Allow
            priority: 360
            direction: Inbound
      when: output_ip_address.changed == true
    - name: Create virtual network interface card
      azure_rm_networkinterface:
        resource_group: "{{ resourceGroup }}"
        name: "{{ vmName }}-nic"
        virtual_network: "{{ vmName }}-vnet"
        subnet: "{{ vmName }}-subnet"
        public_ip_name: "{{ vmName }}-ip"
        security_group: "{{ vmName }}-nsg"
      when: output_ip_address.changed == true
    - name: Create VM
      azure_rm_virtualmachine:
        resource_group: "{{ resourceGroup }}"
        name: "{{ vmName }}"
        vm_size: Standard_D2s_v3
        admin_username: cw2prod
        ssh_password_enabled: false
        ssh_public_keys:
          - path: /home/cw2prod/.ssh/authorized_keys
            key_data: "{{ deployKey.public_key }}"
        network_interfaces: "{{ vmName }}-nic"
        image:
          offer: UbuntuServer
          publisher: Canonical
          sku: '16.04-LTS'
          version: latest
      when: output_ip_address.changed == true
    - name: Store public ip locally
      copy:
        dest: "{{ ansible_env.HOME }}/prod.txt"
        content: "{{ output_ip_address.state.ip_address }}"
    - name: Print Public IP for VM which will be created
      debug:
        msg: "The public IP is {{ output_ip_address.state.ip_address }}."